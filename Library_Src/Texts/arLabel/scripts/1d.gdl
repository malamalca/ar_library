dim Variables[][]linear_unit = ""ret = request("Linear_dimension", "", linear_format)if strstr(linear_format, "e") > 0 then linear_unit = "m"if strstr(linear_format, "m") > 0 then linear_unit = "m"if strstr(linear_format, "mm") > 0 then linear_unit = "mm"if strstr(linear_format, "cm") > 0 then linear_unit = "cm"if strstr(linear_format, "ffi") > 0 then linear_unit = "ffi"if strstr(linear_format, "fdi") > 0 then linear_unit = "fdi"if strstr(linear_format, "df") > 0 then linear_unit = "ft"if strstr(linear_format, "di") > 0 then linear_unit = "in"if strstr(linear_format, "pt") > 0 then linear_unit = "pt"area_unit = ""ret = request("Area_dimension", "", area_format)if strstr(area_format, "sqm") > 0 then area_unit = "m2"if strstr(area_format, "sqcm") > 0 then area_unit = "cm2"if strstr(area_format, "sqmm") > 0 then area_unit = "mm2"if strstr(area_format, "sqf") > 0 then area_unit = "sqf"if strstr(area_format, "sqi") > 0 then area_unit = "sqi"angular_unit = "°"ret = request("Angular_dimension", "", angular_format)SLOPEMARKER_NONE = 10SLOPEMARKER_TRIANGLE = 0SLOPEMARKER_INCLINATION = 1BORDER_NONE = 0BORDER_RECT = 1BORDER_1 = 2ET_OBJECT = 1ET_WINDOW = 3ET_DOOR = 4ET_WALL = 5ET_COLUMN = 6ET_SLAB = 7ET_ROOF = 8ET_FILL = 9ET_MESH = 10ET_ZONE = 11ET_BEAM = 12ET_SKYLIGHT = 19ET_MORPH = 20ET_RAILING = 25ET_OPENING = 26defaultCaption = ""defaultCaption2 = ""defaultCaption3 = ""ix = 0!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! OBJECTSif GLOB_ELEM_TYPE = ET_OBJECT then	! object	objectName = ""	result = request("ASSOCLP_NAME", "", objectName)	result = request("ASSOCLP_PARVALUE", "A", index, type, flags, dim1, dim2, a)	result = request("ASSOCLP_PARVALUE", "B", index, type, flags, dim1, dim2, b)	result = request("ASSOCLP_PARVALUE", "ZZYZX", index, type, flags, dim1, dim2, z)	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "topLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION + SYMB_Z_SIZE) + " " + linear_unit	ix = ix+1	variables[ix][1] = "topLevelAbs"	variables[ix][2] = str{2}(linear_format, GLOB_PROJECT_ALTITUDE + GLOB_HSTORY_ELEV + GLOB_ELEVATION + SYMB_Z_SIZE) + " " + linear_unit	ix = ix+1	variables[ix][1] = "bottomLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION) + " " + linear_unit	ix = ix+1	variables[ix][1] = "bottomLevelAbs"	variables[ix][2] = str{2}(linear_format, GLOB_PROJECT_ALTITUDE + GLOB_HSTORY_ELEV + GLOB_ELEVATION) + " " + linear_unit	ix = ix+1	variables[ix][1] = "A"	variables[ix][2] = str{2}("%*1.0cm", a)	ix = ix+1	variables[ix][1] = "B"	variables[ix][2] = str{2}("%*1.0cm", b)	ix = ix+1	variables[ix][1] = "Z"	variables[ix][2] = str{2}(linear_format, z) + " " + linear_unit	if strsub(objectName,1,11)="Collar Beam" or strsub(objectName,1,6)="Purlin" or strsub(objectName,1,5)="Strut" or strsub(objectName,1,14)="Block Inclined" or objectName="Beam 02" or objectName="Stud_01" then		result = request("ASSOCLP_PARVALUE", "h", index, type, flags, dim1, dim2, h)		ix = ix+1		variables[ix][1] = "h"		variables[ix][2] = str{2}("%1.0cm", h)	endif	if strsub(objectName, 1, 14) = "Block Inclined" then defaultCaption = "špirovec <B>/<h> cm"	if strsub(objectName, 1,  6) = "Purlin" then defaultCaption = "lega <B>/<h> cm"	if strsub(objectName, 1, 11) = "Collar Beam" then defaultCaption = "škarje <B>/<h> cm"	if strsub(objectName, 1,  5) = "Strut" then defaultCaption = "ročica <B>/<h> cm"	if strsub(objectName, 1,  4) = "Post" then defaultCaption = "soha <A>/<B> cm"	if strsub(objectName, 1, 13) = "ArCevniRazvod" or strsub(objectName, 1, 13) = "arCevniRazvod" then		defaultCaption = "PVC DN<DN>, l=<length>, i=<slope>"		result = request("ASSOCLP_PARVALUE", "A", index, type, flags, dim1, dim2, dn)		ix = ix+1		variables[ix][1] = "DN"		variables[ix][2] = str{2}("%1.0mm", A)		result = request("ASSOCLP_PARVALUE", "totalLength", index, type, flags, dim1, dim2, len)		ix = ix+1		variables[ix][1] = "length"		variables[ix][2] = str{2}("%1.1m", len)+"m"		result = request("ASSOCLP_PARVALUE", "slope", index, type, flags, dim1, dim2, slope)		ix = ix+1		variables[ix][1] = "slope"		variables[ix][2] = str{2}("%1.1", slope)+"%"	endif	if strsub(objectName, 1, 17) = "ArRevizijskiJasek" or strsub(objectName, 1, 7) = "arJašek" then		defaultCaption = "RJ <A>cm"		defaultCaption2 = "k.p.=<topLevel>"		defaultCaption3 = "k.d.=<bottomLevel>"	endif    if strsub(objectName, 1, 10) = "ArPeskolov" then		defaultCaption = "PE <A>cm"		defaultCaption2 = "k.p.=<topLevel>"		defaultCaption3 = "k.d.=<bottomLevel>"	endif	if strsub(objectName, 1, 16) = "ArOhisjeZaVentil" then		result = request("ASSOCLP_PARVALUE", "airVolume", index, type, flags, dim1, dim2, airVolume)		ix = ix+1		variables[ix][1] = "volume"		variables[ix][2] = str{2}("%1.0", airVolume)+" m3/h"		defaultCaption = "<volume>"	endif	if strsub(objectName, 1, 6) = "Gutter" then		result = request("ASSOCLP_PARVALUE", "gs_gutter_slope_in_percent", index, type, flags, dim1, dim2, slope)		ix = ix+1		variables[ix][1] = "slope"		variables[ix][2] = str{2}("%1.1", slope)+"%"		defaultCaption = "žleb RŠ330, i=<slope>, l=<A> cm"	endif	if strsub(objectName, 1, 10) = "arPolyline" then		result = request("ASSOCLP_PARVALUE", "total_length", index, type, flags, dim1, dim2, totalLength)		ix = ix+1		variables[ix][1] = "totalLength"		variables[ix][2] = str{2}(linear_format, totalLength) + " " + linear_unit			defaultCaption = "<totalLength>"	endifendif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! WALLSif GLOB_ELEM_TYPE = ET_WALL then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "topLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION + WALL_HEIGHT) + " " + linear_unit	ix = ix+1	variables[ix][1] = "bottomLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION) + " " + linear_unit		ix = ix+1	variables[ix][1] = "thickness"	variables[ix][2] = str{2}(linear_format, WALL_THICKNESS) + " " + linear_unit		ix = ix+1	variables[ix][1] = "height"	variables[ix][2] = str{2}(linear_format, WALL_HEIGHT) + " " + linear_unit		ix = ix+1	variables[ix][1] = "length"	variables[ix][2] = str{2}(linear_format, WALL_LENGTH_A) + " " + linear_unit		ix = ix+1	variables[ix][1] = "compositeName"	variables[ix][2] = WALL_COMPS_NAME		defaultCaption = "plošča <thickness>"	defaultCaption2 = "k.v. = <topLevel>"	defaultCaption3 = "k.d. = <bottomLevel>"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! SLABSif GLOB_ELEM_TYPE = ET_SLAB then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	variables[ix][1] = "surface"	variables[ix][2] = str{2}(area_format, SLAB_TOP_SURF_CON) + " " + area_unit	ix = ix+1	variables[ix][1] = "area"	variables[ix][2] = str{2}(area_format, SLAB_TOP_SURF_CON) + " " + area_unit	ix = ix+1	variables[ix][1] = "bottomArea"	variables[ix][2] = str{2}(area_format, SLAB_BOT_SURF_CON) + " " + area_unit	ix = ix+1	variables[ix][1] = "bottomLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION - SLAB_THICKNESS) + " " + linear_unit	ix = ix+1	variables[ix][1] = "topLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION) + " " + linear_unit		ix = ix+1	variables[ix][1] = "thickness"	variables[ix][2] = str{2}(linear_format, SLAB_THICKNESS) + " " + linear_unit		topCladding = 0	coreWidth = 0	if SLAB_SKINS_NUMBER = 0 then		coreWidth = SLAB_THICKNESS	else		i = 1		while int(SLAB_SKINS_PARAMS[i][17]) = 0 and i <= SLAB_SKINS_NUMBER do			topCladding = topCladding + SLAB_SKINS_PARAMS[i][2]			i = i + 1		endwhile		while ((int(SLAB_SKINS_PARAMS[i][17]) = 1) or (int(SLAB_SKINS_PARAMS[i][17]) = 3)) and i <= SLAB_SKINS_NUMBER do			coreWidth = coreWidth + SLAB_SKINS_PARAMS[i][2]			i = i + 1		endwhile	endif	ix = ix+1	variables[ix][1] = "coreThickness"	variables[ix][2] = str{2}("%*1.0cm", coreWidth) + " cm"	ix = ix+1	variables[ix][1] = "coreTopLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION - topCladding) + " " + linear_unit		ix = ix+1	variables[ix][1] = "coreBottomLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION - topCladding - coreWidth) + " " + linear_unit		defaultCaption = "plošča <thickness>"	defaultCaption2 = "k.v. = <topLevel>"	defaultCaption3 = "k.d. = <bottomLevel>"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ROOFif GLOB_ELEM_TYPE = ET_ROOF then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "area"	variables[ix][2] = str{2}(area_format, ROOF_CONTOUR_AREA) + " " + area_unit	ix = ix+1	variables[ix][1] = "surface"	variables[ix][2] = str{2}(area_format, ROOF_TOP_SURF) + " " + area_unit	ix = ix+1	variables[ix][1] = "angle"	variables[ix][2] = str{2}(angular_format, ROOF_ANGLE)	ix = ix+1	variables[ix][1] = "angle%"	variables[ix][2] = str{2}("%*1.1", tan(ROOF_ANGLE) * 100) + "%"	defaultCaption = "streha <angle>"	defaultCaption2 = "<area>"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! WINDOWif GLOB_ELEM_TYPE = ET_WINDOW then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	defaultCaption = "<id>"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! DOORif GLOB_ELEM_TYPE = ET_DOOR then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	defaultCaption = "<id>"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! FILLif GLOB_ELEM_TYPE = ET_FILL then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "area"	variables[ix][2] = str{2}(area_format, FILL_SURF) + " " + area_unit	ix = ix+1	variables[ix][1] = "perimeter"	variables[ix][2] = str{2}("%*1.0m", FILL_PERIMETER)	defaultCaption = "<area>"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! MESHif GLOB_ELEM_TYPE = ET_MESH then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "area"	variables[ix][2] = str{2}(area_format, MESH_BOTTOM_SURF) + " " + area_unitendif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! BEAMSif GLOB_ELEM_TYPE = ET_BEAM then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "height"	variables[ix][2] = str{2}("%*1.0cm",  BEAM_HEIGHT) 	ix = ix+1	variables[ix][1] = "width"	variables[ix][2] = str{2}("%*1.0cm", BEAM_THICKNESS)	ix = ix+1	variables[ix][1] = "bottomLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION)	ix = ix+1	variables[ix][1] = "topLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION +  BEAM_HEIGHT)	ix = ix+1	variables[ix][1] = "length"	variables[ix][2] = str{2}("%*1.0cm", BEAM_LENGTH_RIGHT)	defaultCaption = "nosilec <width>/<height> cm"	defaultCaption2 = "k.v. = <topLevel> cm"	defaultCaption3 = "k.d. = <bottomLevel> cm"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! COLUMNSif GLOB_ELEM_TYPE = ET_COLUMN then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "height"	variables[ix][2] = str{2}("%*1.0cm",  COLU_HEIGHT) 	ix = ix+1	variables[ix][1] = "bottomLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION)	ix = ix+1	variables[ix][1] = "topLevel"	variables[ix][2] = str{2}(linear_format, GLOB_HSTORY_ELEV + GLOB_ELEVATION + COLU_HEIGHT)	defaultCaption = "steber h=<height> cm"	defaultCaption2 = "k.v. = <topLevel> cm"	defaultCaption3 = "k.d. = <bottomLevel> cm"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! SKYLIGHTif GLOB_ELEM_TYPE = ET_SKYLIGHT then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "width"	variables[ix][2] =  str{2}("%*1.0cm", SKYL_OPENING_WIDTH)	ix = ix+1	variables[ix][1] = "height"	variables[ix][2] =  str{2}("%*1.0cm", SKYL_OPENING_HEIGHT)endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! MORPHif GLOB_ELEM_TYPE = ET_MORPH then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "area"	variables[ix][2] =  str{2}(area_format, MORPH_SURFACE) + " " + area_unit	ix = ix+1	variables[ix][1] = "volume"	variables[ix][2] = str{2}(area_format, MORPH_VOLUME) + " " + area_unit	defaultCaption = "<id> : <area>"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! RAILINGif GLOB_ELEM_TYPE = ET_RAILING then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "height"	variables[ix][2] =  str{2}("%*1.0cm", RAILING_HEIGHT)	ix = ix+1	variables[ix][1] = "length"	variables[ix][2] =  str{2}(linear_format, RAILING_3DLENGTH)	defaultCaption = "Ograja, h=<height> cm, L=<length> " + linear_unitendif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ZONEif GLOB_ELEM_TYPE = ET_ZONE then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	zoneName = ""	zoneNumber = ""	zoneArea = ""	zonePerimeter = ""	zoneCategory = ""	zoneCategoryCode = ""	zoneArea = 0	zonePerimeter = 0	nr = request("Property_Value_Of_Parent", "Builtin.Zone_ZoneName", __typeValue, __dim1, __dim2, zoneName)	nr = request("Property_Value_Of_Parent", "Builtin.Zone_ZoneNumber", __typeValue, __dim1, __dim2, zoneNumber)	nr = request("Property_Value_Of_Parent", "Builtin.Zone_CalculatedArea", __typeValue2, __dim1, __dim2, zoneArea)	nr = request("Property_Value_Of_Parent", "Builtin.Zone_Perimeter", __typeValue, __dim1, __dim2, zonePerimeter )	nr = request("Property_Value_Of_Parent", "Builtin.Zone_ZoneCategory", __typeValue, __dim1, __dim2, zoneCategory)	nr = request("Property_Value_Of_Parent", "Builtin.Zone_ZoneCategoryCode", __typeValue, __dim1, __dim2, zoneCategoryCode)!Builtin.Zone_CalculatedArea!Builtin.Zone_MeasuredArea!Builtin.Zone_NetArea	ix = ix+1	variables[ix][1] = "name"	variables[ix][2] =  zoneName	ix = ix+1	variables[ix][1] = "number"	variables[ix][2] =  zoneName	ix = ix+1	variables[ix][1] = "area"	variables[ix][2] = str{2}(area_format, zoneArea) + " " + area_unit	ix = ix+1	variables[ix][1] = "category"	variables[ix][2] =  zoneCategory	ix = ix+1	variables[ix][1] = "categoryCode"	variables[ix][2] =  zoneCategoryCode	ix = ix+1	variables[ix][1] = "perimeter"	variables[ix][2] = str{2}("%*1.0cm", zonePerimeter)	defaultCaption = "<name>"endif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! HOLE/OPENINGif GLOB_ELEM_TYPE = ET_OPENING then	ix = ix+1	variables[ix][1] = "id"	variables[ix][2] = GLOB_ID	ix = ix+1	variables[ix][1] = "A"	variables[ix][2] = str{2}("%*1.0cm", OPENING_WIDTH)	ix = ix+1	variables[ix][1] = "B"	variables[ix][2] =  str{2}("%*1.0cm", OPENING_HEIGHT)	ix = ix+1	variables[ix][1] = "bottomLevel"	variables[ix][2] =  str{2}(linear_format, OPENING_SILLHEIGHT_VALUES.toHomeStory) + " " + linear_unit	ix = ix+1	variables[ix][1] = "bottomLevelAbs"	variables[ix][2] =  str{2}(linear_format, OPENING_SILLHEIGHT_VALUES.toProjectZero) + " " + linear_unit	defaultCaption = "<A>/<B>"endif