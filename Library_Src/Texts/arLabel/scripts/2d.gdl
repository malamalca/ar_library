	alignNode = 5	if LABEL_TEXT_ALIGN = 1 then  		! left		alignNode = 4	endif	if LABEL_TEXT_ALIGN = 3 then		! right		alignNode = 6	endif	if LABEL_TEXT_ALIGN = 2 then		! center		alignNode = 5	endif		define style "LabelMarker" LABEL_FONT_NAME, LABEL_TEXT_SIZE, alignNode, LABEL_FONT_STYLE	set style "LabelMarker"		ret = request("Height_of_style", "LabelMarker", textHeight)	textHeight = textHeight / 1000 * GLOB_SCALE	if LABEL_CUSTOM_ARROW then		add2 	LABEL_POSITION [2][1]	+	LABEL_POSITION [3][1],				LABEL_POSITION [2][2]	+	LABEL_POSITION [3][2]	endif		textRotation = 0	unId = 1		if GLOB_ELEM_TYPE = ET_ROOF and slopeMarker <> SLOPEMARKER_NONE then		textRotation = LABEL_ROTANGLE		markerSize = A					hotspot2 0, deltaY, unId, deltaX, 1+128: unId = unId + 1		hotspot2 -1, 0, unId, deltaX, 3: unId = unId + 1		hotspot2 deltaX, deltaY, unId, deltaX, 2: unId = unId + 1			hotspot2 deltaX, 0, unId, deltaY, 1+128: unId = unId + 1		hotspot2 0, -1, unId, deltaY, 3: unId = unId + 1		hotspot2 deltaX, deltaY, unId, deltaY, 2: unId = unId + 1			hotspot2 0, 0, unId: unId = unId + 1			add2 deltaX, deltaY			!center of angle		hotspot2 0, -markerSize, unId, rotAngle, 4+128: unId = unId + 1													! base		hotspot2 0 + markerSize * sin(rotAngle), 0 - markerSize * cos(rotAngle), unId, rotAngle, 5: unId = unId + 1		! moving		hotspot2 0, 0, unId, rotAngle, 6: unId = unId + 1					! draw marker		if slopeMarker = SLOPEMARKER_TRIANGLE then					rot2 rotAngle					fill "Solid Fill"				poly2_b 3, 7, 1, 1, 					-markerSize, 0, 1,					markerSize, 0, 1,					0, -markerSize, 1			del 1		endif		if slopeMarker = SLOPEMARKER_INCLINATION then			rot2 rotAngle				line2 0, 0, 0, -markerSize			line2 0, 0, -markerSize * sin(ROOF_ANGLE), -markerSize * cos(ROOF_ANGLE)			del 1		endif		del 1	endif		if LabelLine1 <> "" then		string_c = LabelLine1	else		string_c = defaultCaption	endif	gosub "formatString"		rot2 textRotation	text2 0, 0, string_c	width_1 = stw(string_c) / 1000 * GLOB_SCALE	width_2 = 0	if showLine2 then		if LabelLine2 <> "" then			string_c = LabelLine2		else			string_c = defaultCaption2		endif				if string_c <> "" then			gosub "formatString"			text2 0, -textHeight, string_c			width_2 = stw(string_c) / 1000 * GLOB_SCALE		endif	endif		width_3 = 0	if showLine3 then		if LabelLine3 <> "" then			string_c = LabelLine3		else			string_c = defaultCaption3		endif		if string_c <> "" then			gosub "formatString"			text2 0, -textHeight * 2, string_c			width_3 = stw(string_c) / 1000 * GLOB_SCALE		endif	endif	!LINE2 0,0, 0,0.05	width_max = max(width_1, width_2, width_3)	if LABEL_FRAME_ON then		boxHeight = textHeight		if width_2 > 0 then boxHeight = boxHeight + textHeight		if width_3 > 0 then boxHeight = boxHeight + textHeight		borderDelta = -width_max / 2		if LABEL_TEXT_ALIGN = 1 then  		! left			borderDelta = 0		endif		if LABEL_TEXT_ALIGN = 3 then		! right			borderDelta = -width_max		endif		borderOffset = LABEL_FRAME_OFFSET*GLOB_SCALE/1000		add2 borderDelta, 0		rect2 -borderOffset + 0, borderOffset + textHeight/2, +borderOffset + width_max, -borderOffset - boxHeight+textHeight/2		del 1		hotspot2 0, 0	endifend"formatString":	for i = 1 to vardim1(variables)		varName = variables[i][1]		varName = "<" + varName + ">"		while strstr(string_c, varName) > 0 do			first_part = strsub(string_c, 1, strstr(string_c, varName)-1)			second_part = strsub(string_c, strstr(string_c, varName)+strlen(varName), strlen(string_c)-strlen(first_part)-strlen(varName))			string_c = first_part + variables[i][2] + second_part		endwhile	next ireturn