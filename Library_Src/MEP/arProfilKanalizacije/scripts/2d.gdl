unId = 1circle2 0, 0, 0.1hotspot2 0, 0, unId: unId = unId + 1modified_base_level = base_levelif relative_coords then	modified_base_level = base_level - GLOB_PROJECT_ALTITUDEendif!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! initial requestsdefine style "fontstyleTableLegend" font_td, font_td_size, 3, 0font_td_height = 1ret = request("Height_of_style", "fontstyleTableLegend", font_td_height)define style "fontstyleCell" font_td, font_td_size, 5, 0font_normal_height = 1ret = request("Height_of_style", "fontstyleCell", font_normal_height)define style "fontstyleVertical" font_td, font_td_size / 1.6, 5, 0font_vertical_height = 1ret = request("Height_of_style", "fontstyleVertical", font_vertical_height)font_vertical_height = font_vertical_height * GLOB_SCALE / 1000!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! draw legendlegend_width = 2legend_padding = 0.2table_line_height = font_td_height * GLOB_SCALE / 1000 + 0.1gosub "Legend"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! offset from y axisdx = offset_sidemaxShaftElevation = 0for i = 1 to n	segmentSlope = 0	if nodes[i][1] > 0 then		segmentSlope = (nodes[i][2]-nodes[i-1][2])/nodes[i][1]	endif	! horizontal length of pipe between shafts (subtract side shafts half width)	pipeHLength = nodes[i][1]	if nodes[i][ND_SHAFTSIZE] > nix then		pipeHLength = pipeHLength - nodes[i][ND_SHAFTSIZE] / 2	endif	if i > 1 then		if nodes[i-1][ND_SHAFTSIZE] > nix then			pipeHLength = pipeHLength - nodes[i-1][ND_SHAFTSIZE] / 2		endif	endif	! pipe elevation with offsets from shaft bottoms	pipeElevation = 0	if i > 1 then		pipeElevation = nodes[i][2]-nodes[i-1][2]		if nodes[i-1][ND_SHAFTSIZE] > nix then			pipeElevation = pipeElevation - nodes[i-1][ND_INLETRIGHT]		endif		if nodes[i][ND_SHAFTSIZE] > nix then			pipeElevation = pipeElevation + nodes[i][ND_INLETLEFT]		endif	endif		! pipe slope without shaft widths	pipeSlope = 0	if pipeHLength > nix then		pipeSlope = pipeElevation / pipeHLength	endif	shaftX = (dx + nodes[i][1]) * scale_factor	! helper vertica line in the middle of node	line2 shaftX, 0, shaftX, 0.3		! urejanje stacionaže	if i > 1 then		hotspot2 dx * scale_factor, 0, unId, nodes[i][1], 1: unId = unId + 1		hotspot2 shaftX, 0, unId, nodes[i][1], 2: unId = unId + 1		hotspot2 dx - 1, 0, unId, nodes[i][1], 3: unId = unId + 1	endif	! urejanje višine	hotspot2 shaftX, 0, unId, nodes[i][ND_ELEVATION], 1: unId = unId + 1	hotspot2 shaftX, nodes[i][2], unId, nodes[i][ND_ELEVATION], 2: unId = unId + 1	hotspot2 shaftX, -1, unId, nodes[i][ND_ELEVATION], 3: unId = unId + 1	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	pen pen_shaft	hotspot2 dx + nodes[i][1], nodes[i][2], unId: unId = unId + 1	! shaft	if nodes[i][ND_SHAFTHEIGHT] > nix then		rect2 	shaftX - nodes[i][ND_SHAFTSIZE] / 2, nodes[i][2], 				shaftX + nodes[i][ND_SHAFTSIZE] / 2, nodes[i][2] + nodes[i][ND_SHAFTHEIGHT]		! shaft height hotspots		hotspot2 shaftX, nodes[i][2], unId, nodes[i][ND_SHAFTHEIGHT], 1: unId = unId + 1		hotspot2 shaftX, nodes[i][2] + nodes[i][ND_SHAFTHEIGHT], unId, nodes[i][ND_SHAFTHEIGHT], 2: unId = unId + 1		hotspot2 shaftX, nodes[i][2] - 1, unId, nodes[i][ND_SHAFTHEIGHT], 3: unId = unId + 1		! shaft width hotspots		hotspot2 shaftX - nodes[i][ND_SHAFTSIZE] / 2, 	nodes[i][2] + nodes[i][ND_SHAFTHEIGHT], unId, nodes[i][ND_SHAFTSIZE], 1: unId = unId + 1		hotspot2 shaftX + nodes[i][ND_SHAFTSIZE] / 2, 	nodes[i][2] + nodes[i][ND_SHAFTHEIGHT], unId, nodes[i][ND_SHAFTSIZE], 2, nodes[i][ND_SHAFTSIZE], "Shaft Width": unId = unId + 1		hotspot2 shaftX - nodes[i][ND_SHAFTSIZE] / 2 - 1, nodes[i][2] + nodes[i][ND_SHAFTHEIGHT], unId, nodes[i][ND_SHAFTSIZE], 3: unId = unId + 1	endif	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	! pipe	pen pen_pipe	if i > 1 then		! line2 dx, nodes[i-1][2], dx + nodes[i][1], nodes[i][2]		leftSideX = dx * scale_factor		if nodes[i-1][ND_SHAFTSIZE] > nix then			leftSideX = leftSideX + nodes[i-1][ND_SHAFTSIZE]/2		endif		rightSideX = shaftX		if nodes[i][ND_SHAFTSIZE] > nix then			rightSideX = rightSideX - nodes[i][ND_SHAFTSIZE]/2		endif				! bottom pipe line		line2 leftSideX, nodes[i-1][2] + nodes[i-1][ND_INLETRIGHT], rightSideX, nodes[i][2] + nodes[i][ND_INLETLEFT]		hotline2 leftSideX, nodes[i-1][2] + nodes[i-1][ND_INLETRIGHT], rightSideX, nodes[i][2] + nodes[i][ND_INLETLEFT]		! top pipe line		if nodes[i][ND_PIPEDIAMETER] > 0 then			pipeHeight = nodes[i][ND_PIPEDIAMETER] / cos(atn(pipeSlope))						line2    leftSideX, nodes[i-1][2] + nodes[i-1][ND_INLETRIGHT] + pipeHeight, rightSideX, nodes[i][2] + nodes[i][ND_INLETLEFT] + pipeHeight			hotline2 leftSideX, nodes[i-1][2] + nodes[i-1][ND_INLETRIGHT] + pipeHeight, rightSideX, nodes[i][2] + nodes[i][ND_INLETLEFT] + pipeHeight		endif	endif	! shaft inlet hotspots	if nodes[i][ND_SHAFTSIZE] > nix then		if i < n then			hotspot2 shaftX + nodes[i][ND_SHAFTSIZE] / 2, nodes[i][2], 							unId, nodes[i][ND_INLETRIGHT], 1+128: unId = unId + 1			hotspot2 shaftX + nodes[i][ND_SHAFTSIZE] / 2, nodes[i][2] + nodes[i][ND_INLETRIGHT], unId, nodes[i][ND_INLETRIGHT], 2: unId = unId + 1			hotspot2 shaftX + nodes[i][ND_SHAFTSIZE] / 2, nodes[i][2] - 1, 						unId, nodes[i][ND_INLETRIGHT], 3: unId = unId + 1		endif		if i > 1 then			hotspot2 shaftX - nodes[i][ND_SHAFTSIZE] / 2, nodes[i][2], 							unId, nodes[i][ND_INLETLEFT], 1+128: unId = unId + 1			hotspot2 shaftX - nodes[i][ND_SHAFTSIZE] / 2, nodes[i][2] + nodes[i][ND_INLETLEFT], unId, nodes[i][ND_INLETLEFT], 2: unId = unId + 1			hotspot2 shaftX - nodes[i][ND_SHAFTSIZE] / 2, nodes[i][2] - 1, 						unId, nodes[i][ND_INLETLEFT], 3: unId = unId + 1		endif	endif		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	pen pen_text	set style "fontstyleCell"	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	! above shaft texts	if nodes[i][ND_SHAFTSIZE] > nix then		shaftTitle = titles[i][1]		if shaftTitle = "" then			shaftTitle = "RJ"		endif		text2 shaftX, nodes[i][2] + nodes[i][ND_SHAFTHEIGHT] + table_line_height * 4, shaftTitle + " DN" + str(nodes[i][ND_SHAFTSIZE] * 100, 5, 0)		text2 shaftX, nodes[i][2] + nodes[i][ND_SHAFTHEIGHT] + table_line_height * 3, "H = " + str(nodes[i][ND_SHAFTHEIGHT] * 100, 3, 0) + " cm"		text2 shaftX, nodes[i][2] + nodes[i][ND_SHAFTHEIGHT] + table_line_height * 2, "k.p. = " + str(modified_base_level + nodes[i][2] + nodes[i][ND_SHAFTHEIGHT], 5, 2) + " mnv"		text2 shaftX, nodes[i][2] + nodes[i][ND_SHAFTHEIGHT] + table_line_height * 1, "k.d. = " + str(modified_base_level + nodes[i][2], 5, 2) + " mnv"	endif	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	! table texts	middleX = (dx + nodes[i][1] / 2) * scale_factor		! stacionaža	text2 shaftX, -table_line_height / 2, str(dx + nodes[i][1] - offset_side, 6, 2)	! točka	text2 shaftX, -table_line_height / 2 - table_line_height * 1, "P" + str(i, 2, 0)	! razdalja	if i > 1 then		segment_length = nodes[i][1]		text2 middleX, -table_line_height / 2 - table_line_height * 1, str(segment_length, 5, 2)	endif	! teren	text2 shaftX, -table_line_height / 2 - table_line_height * 2, str(modified_base_level + nodes[i][2] + nodes[i][ND_SHAFTHEIGHT], 5, 2)	! cev	if i > 1 then		text2 middleX, -table_line_height / 2 - table_line_height * 5, "DN" + str(nodes[i][ND_PIPEDIAMETER] * 1000, 3, 0)	endif	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	set style "fontstyleVertical"	! naklon v % in abs	if i > 1 then		text2 middleX, -table_line_height / 2 - table_line_height * 6 + font_vertical_height/2, str(pipeSlope * 100, 3, 1) + "%  (" + str(atn(pipeSlope), 3, 1) + "°)"		text2 middleX, -table_line_height / 2 - table_line_height * 6 - font_vertical_height/2, str(pipeElevation, 4, 2) + " m"	endif	! kota temena cevi	add2 shaftX, -table_line_height / 2 - table_line_height * 3	rot2 90	leftPipeElevation = 0	if i > 1 then 		leftPipeElevation = leftPipeElevation + nodes[i][ND_INLETLEFT]	endif	rightPipeElevation = 0	if i < n then 		rightPipeElevation = rightPipeElevation + nodes[i][ND_INLETRIGHT]	endif	if abs(leftPipeElevation - rightPipeElevation) < nix then		! equal heights		text2 0, 0, str(modified_base_level + nodes[i][2] + leftPipeElevation, 6, 2)	else		text2 0, font_vertical_height / 2, str(modified_base_level + nodes[i][2] + leftPipeElevation, 6, 2)		text2 0, -font_vertical_height / 2, str(modified_base_level + nodes[i][2] + rightPipeElevation, 6, 2)	endif	! globina izkopa od terena!!!	text2 -table_line_height, 0, str(nodes[i][2] - 0.1, 6, 2)	del 2	dx = dx + nodes[i][1]	! determine max elevation for side scale	if nodes[i][2] + nodes[i][ND_SHAFTHEIGHT] > maxShaftElevation then		maxShaftElevation = nodes[i][2] + nodes[i][ND_SHAFTHEIGHT]	endifnext i!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! insert new nodehotspot2 (dx + nodes[i+1][1]) * scale_factor, 		0, unId, ins, 1+128: unId = unId + 1hotspot2 (dx + nodes[i+1][1] + 1) * scale_factor, 	0, unId, ins, 2: unId = unId + 1hotspot2 -1, 										0, unId, ins, 3: unId = unId + 1!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! table gridpen pen_gridfor i = 1 to 8	line2 -legend_padding - legend_width, -table_line_height * (i-1), (dx + offset_side) * scale_factor, -table_line_height * (i-1)next i! legend side linesline2 -legend_padding - legend_width, 0, -legend_padding - legend_width, -table_line_height * 7line2 0, 0, 0, -table_line_height * 7! table rightmost lineline2 (dx + offset_side) * scale_factor, 0, (dx + offset_side) * scale_factor, -table_line_height * 7! side scaleline2 0, 0, 0, maxShaftElevation + offset_side! draw ticks on side scaletickCount = 20tickOffset = .05tickSpacing = int(maxShaftElevation / tickCount * 100) / 100for i = 1 to tickCount + 1	line2 -tickOffset, tickSpacing * i, +tickOffset, tickSpacing * i	hotspot2 0, tickSpacing * i, unId: unId = unId + 1next i! draw height textsset style "fontstyleVertical"tickTextWidth = stw(str(modified_base_level, 5, 2))  * GLOB_SCALE / 1000for i = 2 to tickCount + 1	text2 -tickTextWidth, tickSpacing * i, str(modified_base_level + tickSpacing * i, 5, 2)next i!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! MAIN PROGRAMend!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"Legend":set style "fontstyleTableLegend"! top line!line2 0, 0, -legend_padding-legend_width, 0text2 -legend_padding, table_line_height, str(modified_base_level, 5, 2) + " mnv"text2 -legend_padding, -table_line_height * 0, "Stacionaža"text2 -legend_padding, -table_line_height * 1, "Št. točke | Razdalja"text2 -legend_padding, -table_line_height * 2, "Kota terena"text2 -legend_padding, -table_line_height * 3, "Kota temena cevi"text2 -legend_padding, -table_line_height * 4, "Globina izkopa"text2 -legend_padding, -table_line_height * 5, "Cev"text2 -legend_padding, -table_line_height * 6, "Padec dna kanala"return