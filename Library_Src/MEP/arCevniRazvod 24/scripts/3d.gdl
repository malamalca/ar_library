uid = 1slopeDeg = ATN(slope/100)PEN penAxisMATERIAL matMODEL SOLIDADDZ A/2! tube shapetubePoints = 3PUT 0, 0, 900PUT A/2, 360, 4001PUT A/2 - wallThickness, 360, 4000HOTSPOT 0, 0, 0!first point reference vectorIF startingCircle THEN	nVerticalNodes = 1	PUT 0, 0, minJunctionLength + 1, 0	PUT 0, 0, minJunctionLength, 0ELSE	nVerticalNodes = 0	PUT -1, 1, SIN(slopeDeg), 0ENDIF!first point of pathPUT 0, 0, 0, 0direction = 0 					! direction 0 means upward on y axisprevX = 0prevY = 0prevZ = 0FOR i = 1 TO nSegments	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	! JUNCTION ARM	IF (i > 1) AND (ABS(directions[i]) < nix) THEN		junctionLength = minJunctionLength		junctionWidth = minJunctionWidth		IF junctionWidths[i] > minJunctionWidth THEN junctionWidth = junctionWidths[i]		IF junctionWidths[i] > A THEN junctionWidth = A		IF junctionLengths[i] > minJunctionLength THEN junctionLength = junctionLengths[i]		ADD prevX, prevY, prevZ		ROTZ direction		IF ABS(junctions[i]) < nix THEN			!!!! vertical junction			ROTY 90 + slopeDeg			ROTZ 180			armcAngle = 90		ELSE					ROTY -90 + slopeDeg 			IF junctions[i] < 180 THEN				ROTZ -90				armcAngle = junctions[i]			ELSE 				ROTZ 90				armcAngle = 360-junctions[i]			ENDIF		ENDIF				ARMC A/2, junctionWidth / 2, junctionLength, 0, 0, armcAngle 		HOTSPOT junctionLength * SIN(armcAngle), 0, junctionLength * SIN(armcAngle)		DEL 4	ENDIF	direction = direction + directions[i]		prevX = prevX + segments[i] * COS(direction)	prevY = prevY + segments[i] * SIN(direction)	prevZ = prevZ - segments[i] * TAN(slopeDeg)	HOTSPOT prevX, prevY, prevZ	PUT prevX, prevY, prevZ, 0NEXT i! vector of last surfacePUT prevX + (segments[nSegments] + 1) * COS(direction), prevY + (segments[nSegments] + 1) * SIN(direction), prevZ - (segments[nSegments] + 1) * TAN(slopeDeg), 0pathPointsNum = tubePoints * 3 + (nVerticalNodes + nSegments + 3) * 4TUBE tubePoints, nVerticalNodes + nSegments + 3, 1+2+4+16+32,	USE(pathPointsNum)!uid = 1!!slopeDeg = ATN(slope/100)!!ADDZ  A/2!ROTY 90 + slopeDeg!!ROTY 90!!! current points!PEN penAxis!MODEL SOLID!!prevbAngle = 0!!FOR i = 1 TO nSegments!	!direction = directions[i]!	tXb = 1!	tYb = 0!	tXe = -1!	tYe = 0!!	angle = -directions[i+1]/2!	!length = segments[i] / COS(slopeDeg)!	length = segments[i]!!!	SPRISM_{2} mat, mat, mat,!		12,!		tXb, tYb, tXe, tYe, length, angle, 		! top vector!		-A/2, 0, A/2, 0, 0, prevbAngle,			! bottom vector!!        -A/2,	0,		13+66, 		mat,!        0,		0,		900,  		mat,!		0,		180,	4013+66,  	mat,!        0,		0,		900,  		mat,!		0,		180,	4013+66,	mat,!		-A/2,	0,		-1,			mat,!		A/2 - wallThickness, 0, 13+66,  mat,!        0,		0,		900+66,		mat,!		0,		-180,	4013+66,	mat,!        0, 		0,    	900,  		mat,!		0,		-180,	4013+66,	mat,!        A/2 - wallThickness, 0, -1, mat!!	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	! JUNCTION ARM!	IF (i > 1) AND (ABS(directions[i]) < nix) THEN!		junctionLength = minJunctionLength!		junctionWidth = minJunctionWidth!		IF junctionWidths[i] > minJunctionWidth THEN junctionWidth = junctionWidths[i]!		IF junctionWidths[i] > A THEN junctionWidth = A!		IF junctionLengths[i] > minJunctionLength THEN junctionLength = junctionLengths[i]!!!		IF ABS(junctions[i]) < nix THEN!			!!!! vertical junction!			ROTZ 180!			armcAngle = 90!		ELSE		!			IF junctions[i] < 180 THEN!				ROTZ -90 - slopeDeg!				armcAngle = 180-junctions[i]!			ELSE!				ROTZ 90 + slopeDeg!				armcAngle = junctions[i]-180!			ENDIF!		ENDIF!!		ARMC A/2, junctionWidth / 2, junctionLength, 0, 0, armcAngle!		HOTSPOT SIN(armcAngle) * junctionLength, 0, COS(armcAngle) * junctionLength!		DEL 1!!	ENDIF!!!	prevbAngle = angle !!	HOTSPOT A/2, 0, 0!	HOTSPOT 0, 0, 0!!	!! debug!	!LIN_ -A/2, 0, 0, A/2, 0, 0!	!CIRCLE 0.1!!!	ADDZ segments[i]!!	!	!! debug!	!CIRCLE 0.1!	!LIN_ tXb, tYb, 0, tXe, tYe, 0!!	!ROTZ 90+direction!!	! 2018-06-28!	! fix when there was error in vertical displacement with slope and multi-direction segments!	! go back to previous slope rotation!	! rotate into segment rotation!	! then reapply slope!	ROTY -slopeDeg!	ROTX angle * 2!	ROTY slopeDeg!!NEXT i!HOTSPOT A/2, 0, 0!HOTSPOT 0, 0, 0!!!