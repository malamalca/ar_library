if gs_detlevel_3D=`Off` then Endif shadow_cast=1 then	shadow onelse	shadow offendifif gs_gdl_debug then	pen 10	addz ac_ref_height	roty 90	arrow=sqr((ac_ref_coords[1][3]-ac_ref_coords[1][1])^2+(ac_ref_coords[1][4]-ac_ref_coords[1][2])^2)	cylind	arrow-0.20, 0.02	addz arrow-0.20	cone 0.20, 0.05, 0, 90, 90	del 3endifpen gs_cont_pen! -----------------------------! Do the covering with the cuts! -----------------------------diff_x=ac_whole_poly[1][7]-ac_whole_poly[1][1]diff_y=ac_whole_poly[1][8]-ac_whole_poly[1][2]!print "diff_x=",diff_x!print "diff_y=",diff_yif abs(diff_y)>eps And abs(diff_x)>eps then	if ac_ref_coords[1][1]>ac_ref_coords[1][3] then extra=180	alfa=atn(diff_y/diff_x)+extraelse	if abs(diff_x)<eps then		if diff_y>0 then			alfa=90		else			alfa=-90		endif	endif	if abs(diff_y)<eps then		if diff_x>0 then			alfa=0		else			alfa=180		endif	endifendif!print "alfa=",alfa! ---------------! Do the covering! ---------------!u=whole_loc_poly[1][1]!v=whole_loc_poly[1][2]a_size=whole_loc_poly[1][7]-whole_loc_poly[1][1]-2*oversizeb_size=whole_loc_poly[1][6]-whole_loc_poly[1][2]-2*oversizeins_diff=(whole_loc_poly[1][2]+oversize)*tan(ac_pitch)addz batten_heightfor i=1 to vardim1(ac_coords)	hotspot ac_coords[i][2],ac_coords[i][3],ac_coords[i][3]*tan(ac_pitch)next idel 1group "geometry"	put	whole_loc_poly[1][1], whole_loc_poly[1][2], 15	put	whole_loc_poly[1][3], whole_loc_poly[1][4], 15	put whole_loc_poly[1][5], whole_loc_poly[1][6], 15	put whole_loc_poly[1][7], whole_loc_poly[1][8], 15	put whole_loc_poly[1][1], whole_loc_poly[1][2], -1	for i=1 to crd_begend[1][2]		if i<>crd_begend[1][2] then			put ac_coords[i][2], ac_coords[i][3], 15		else			put ac_coords[i][2], ac_coords[i][3], -1		endif	next i	addz ac_ref_height+ac_thickness+batten_height+ins_diff-sgn(ac_pitch)*0.50 ! whole_loc_poly[1][1],whole_loc_poly[1][2],	prism_	nsp/3, temp_zz+(whole_loc_poly[1][6]-whole_loc_poly[1][2]-2*oversize)*tan(ac_pitch)+sgn(ac_pitch)*1,			get(nsp)	if vardim1(crd_begend)>1 then		for j=2 to vardim1(crd_begend)			for i=crd_begend[j][1] to crd_begend[j][2]				if i<>crd_begend[1][2] then					put ac_coords[i][2], ac_coords[i][3], 15				else					put ac_coords[i][2], ac_coords[i][3], -1				endif			next i			prism_	nsp/3, temp_zz+(whole_loc_poly[1][6]-whole_loc_poly[1][2]-2*oversize)*tan(ac_pitch)+sgn(ac_pitch)*1,					get(nsp)		next j	endif	del 1endgroupif gs_gdl_debug then	model wire	placegroup "geometry"	model solidendifgroup "covering"	add whole_loc_poly[1][1]+oversize,whole_loc_poly[1][2]+oversize,ac_ref_height+ac_thickness+batten_height+ins_diff	min_space_x = 0.005	space_x = 0.005	space_z = 0.002	tile_num = int(a_size / (tile_width + min_space_x))	space_x = (a_size - (tile_num * tile_width)) / (tile_num-1)	row_num=ceil((b_size/cos(ac_pitch)-(tile_length-tile_space))/tile_space)-1	beta=atn((tile_thk+space_z)/(tile_length-(tile_length-tile_space)))			! additional tile rotation	dist=tile_length*((tile_thk+space_z)/(tile_space))	material tile_mat	group "tiles"		rotx ac_pitch		addz dist		If ac_pitch<0 Then			addy row_num*tile_space			muly -1		EndIf		rotx -beta		for i=1 to row_num			addx tile_width/2			if half_offset then				if int(i/2) = i/2 then					actual_num = tile_num + 1				else					actual_num = tile_num				endif			else				actual_num = tile_num			endif			space_x = (a_size - (tile_num * tile_width)) / (actual_num-1)			! foreach tile in line			for j = 1 to actual_num				actual_tile_width = tile_width				if half_offset and (int(i/2) = i/2) then					if (j = 1) or (j = actual_num) then						actual_tile_width = tile_width / 2						if j = 1 then							addx -tile_width/4						else							addx -tile_width/4*3						endif					else						addx -tile_width/2					endif				endif				if gs_detlevel_3Dm = 1 then					!! Simple Model					plane_	5,							-actual_tile_width/2, 0, tile_thk, 15,							-actual_tile_width/2, tile_length, tile_thk, 15,							actual_tile_width/2, tile_length, tile_thk, 15,							actual_tile_width/2, 0, tile_thk, 15,							-actual_tile_width/2, 0, tile_thk, -1				else					!! Detailed Model					prism_	5, tile_thk,							-actual_tile_width/2, 0, 15,							-actual_tile_width/2, tile_length, 15,							actual_tile_width/2, tile_length, 15,							actual_tile_width/2, 0, 15,							-actual_tile_width/2, 0, -1				endif				if half_offset and (int(i/2) = i/2) then					del 1				endif				addx tile_width+space_x			next j			del actual_num+1			add 0,tile_space,tile_thk+space_z		next i		del row_num		del 3		If ac_pitch<0 Then del 2	endgroup	placegroup "tiles"	del 1endgroup!!!!if ac_accessory_debug then!!!!	add whole_loc_poly[1][1]+oversize,whole_loc_poly[1][2]+oversize,ac_ref_height+ac_thickness+batten_height+ins_diff!!!!	prism_	5,!!!!endifif is_irregular then	finish=subgroup("covering","geometry")	placegroup finishelse	placegroup "covering"endif