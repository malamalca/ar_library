unId = 0set fill gs_fill_typeset line_type contour_line_typepen gs_cont_penif orientation = ORIENTATION_VERTICAL then	hotspot2 0, 0	hotspot2 -A/2, -B/2	hotspot2 A/2, B/2	hotspot2 A/2, -B/2	hotspot2 -A/2, B/2		poly2_b{2}	5,		3,	gs_fill_pen, gs_back_pen, 		0,		0,		0, 		-A/2,	-B/2,	1, 		-A/2,	B/2,	1, 		A/2,	B/2,	1, 		A/2,	-B/2,	1, 		-A/2,	-B/2,	1			line2 -A/2, -B/2, A/2, B/2	line2 -A/2, B/2, A/2, -B/2	hotline2 -A/2, -B/2, -A/2, B/2	hotline2 A/2, -B/2, A/2, B/2	hotline2 -A/2, -B/2, A/2, -B/2	hotline2 -A/2, B/2, A/2, B/2endifif orientation = ORIENTATION_HORIZONTAL then	poly2_b{2}	5,					3,	gs_fill_pen, gs_back_pen, 	0,			0,					0, 	-A/2,		-B/2,				1, 	-A/2,		-B/2 - hor_length,	1, 	A/2,		-B/2 - hor_length,	1, 	A/2,		-B/2,				1, 	-A/2,		-B/2,				1	hotspot2 -A/2,	-B/2, unId: unId = unId + 1	hotspot2 -A/2,	-B/2 - hor_length, unId: unId = unId + 1	hotspot2 A/2,	-B/2 - hor_length, unId: unId = unId + 1	hotspot2 A/2,	-B/2, unId: unId = unId + 1	! horizontal length hotspot	hotspot2 0, -B/2, unId, hor_length, 1: unId = unId + 1	hotspot2 0, -B/2 - hor_length, unId, hor_length, 2: unId = unId + 1	hotspot2 0, -B/2 + 1, unId, hor_length, 3: unId = unId + 1	! add cut hotspot	if n < MAX_CUTS then		hotspot2 0, -B/2, unId, add_cut_distance, 1: unId = unId + 1		hotspot2 0, -B/2 - ADD_CUT_DIST, unId, add_cut_distance, 2, add_cut_distance, "New Cut Distance": unId = unId + 1		hotspot2 0, -B/2 - ADD_CUT_DIST + 1, unId, add_cut_distance, 3: unId = unId + 1	endif	! show cut lines	set line_type hidden_line_type	for i = 1 to n		if cut_kinds[i] = KIND_ONESIDE then			cutWidth = A			cutOffset = 0			if cut_rotations[i] = 90 or cut_rotations[i] = 270 then				cutWidth = cut_lengths[i][PAR_CUT_THICKNESS1]				if cut_rotations[i] = 90 then					cutOffset = A - cutWidth				endif			endif			line2 -A/2 + cutOffset, -B/2 - cut_lengths[i][PAR_CUT_DIST], -A/2 + cutOffset + cutWidth, -B/2 - cut_lengths[i][PAR_CUT_DIST]			line2 -A/2 + cutOffset, -B/2 - cut_lengths[i][PAR_CUT_DIST] - cut_lengths[i][PAR_CUT_HEIGHT], -A/2 + cutOffset + cutWidth, -B/2 - cut_lengths[i][PAR_CUT_DIST] - cut_lengths[i][PAR_CUT_HEIGHT]			if cut_rotations[i] = 90 then				line2 -A/2 + cutOffset, -B/2 - cut_lengths[i][PAR_CUT_DIST], -A/2 + cutOffset, -B/2 - cut_lengths[i][PAR_CUT_DIST] - cut_lengths[i][PAR_CUT_HEIGHT]			endif			if cut_rotations[i] = 270 then				line2 -A/2 + cutOffset + cutWidth, -B/2 - cut_lengths[i][PAR_CUT_DIST], -A/2 + cutOffset + cutWidth, -B/2 - cut_lengths[i][PAR_CUT_DIST] - cut_lengths[i][PAR_CUT_HEIGHT]			endif			hotspotOffset = 0			if cut_rotations[i] = 90 then				hotspotOffset = A/2				hotspotThicknessDirection = -1			endif			if cut_rotations[i] = 270 then				hotspotOffset = -A/2				hotspotThicknessDirection = 1			endif			! distance from start hotspot			hotspot2 hotspotOffset, -B/2, unId, cut_lengths[i][PAR_CUT_DIST], 1: unId = unId + 1			hotspot2 hotspotOffset, -B/2 - cut_lengths[i][PAR_CUT_DIST], unId, cut_lengths[i][PAR_CUT_DIST], 2: unId = unId + 1			hotspot2 hotspotOffset, -B/2 + 1, unId, cut_lengths[i][PAR_CUT_DIST], 3: unId = unId + 1			! cut height hotspot			hotspot2 hotspotOffset, -B/2 - cut_lengths[i][PAR_CUT_DIST], unId, cut_lengths[i][PAR_CUT_HEIGHT], 1: unId = unId + 1			hotspot2 hotspotOffset, -B/2 - cut_lengths[i][PAR_CUT_DIST] - cut_lengths[i][PAR_CUT_HEIGHT], unId, cut_lengths[i][PAR_CUT_HEIGHT], 2: unId = unId + 1			hotspot2 hotspotOffset, -B/2 - cut_lengths[i][PAR_CUT_DIST] + 1, unId, cut_lengths[i][PAR_CUT_HEIGHT], 3: unId = unId + 1				! thickness hotspot			if cut_rotations[i] = 90 or cut_rotations[i] = 270 then				hotspot2 hotspotOffset, -B/2 - cut_lengths[i][PAR_CUT_DIST], unId, cut_lengths[i][PAR_CUT_THICKNESS1], 1: unId = unId + 1				hotspot2 hotspotOffset + cut_lengths[i][PAR_CUT_THICKNESS1] * hotspotThicknessDirection, -B/2 - cut_lengths[i][PAR_CUT_DIST], unId, cut_lengths[i][PAR_CUT_THICKNESS1], 2: unId = unId + 1				hotspot2 hotspotOffset - 1 * hotspotThicknessDirection, -B/2 - cut_lengths[i][PAR_CUT_DIST], unId, cut_lengths[i][PAR_CUT_THICKNESS1], 3: unId = unId + 1				endif		endif	next iendif