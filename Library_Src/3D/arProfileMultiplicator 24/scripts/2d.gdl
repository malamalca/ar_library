_nComponents = 0dim _componentTypes[]dim _componentPens[]dim _componentLineTypes[]n = REQUEST ("Profile_components", profile, _nComponents, _componentTypes)IF _nComponents > 0 THEN	DIM componentPointCounts[ ]	DIM componentPoints[ ]	n = REQUEST ("Profile_default_geometry", profile, componentPointCounts)	! number of points for first geometry	! TEXT2 0, 0, STR(componentPointCounts[1], 5, 0)	_pointIndex = _nComponents	FOR i = 1 TO _nComponents		n = REQUEST{4} ("Profile_component_info", profile, i, "gs_profile_comp_pens", _componentPens)		n = REQUEST{4} ("Profile_component_info", profile, i, "gs_profile_comp_linetypes", _componentLineTypes)		n = REQUEST{4} ("Profile_component_info", profile, i, "gs_profile_bmat", _componentMaterial)		n = REQUEST{2} ("Material_info", _componentMaterial, "gs_mat_fill_ind", _fillIndex)		n = REQUEST{2} ("Material_info", _componentMaterial, "gs_mat_fillcolor_ind", _fillColorIndex)		FOR j = 1 TO componentPointCounts[i]			X = 				componentPointCounts[_pointIndex + 1]			Y = 				componentPointCounts[_pointIndex + 2]			edgeVisible = 		componentPointCounts[_pointIndex + 3]			vertEdgeVisible = 	componentPointCounts[_pointIndex + 4]			additionalStatus = 	componentPointCounts[_pointIndex + 5]			_pointIndex = _pointIndex + 5			poly2Status = edgeVisible + additionalStatus			! number of points for first geometry			! TEXT2 0, j*i*0.4, STR(X, 10, 4) + " " + STR(Y, 10, 4) + " " + STR(edgeVisible , 10, 4) + " " + STR(vertEdgeVisible , 10, 4) + " " + STR(additionalStatus , 10, 4)			!PUT X, Y, poly2Status 			PUT X, Y, poly2Status, _componentPens[j], _componentLineTypes[j]		NEXT j		!_componentMaterial = 0		!n = REQUEST{4} ("Profile_component_info", profile, i, "gs_profile_bmat", _componentMaterial)		!TEXT2 0, 0, _componentMaterial		!POLY2_B componentPointCounts[i], 1, 2, 3, GET(componentPointCounts[i] * 3)				POLY2_B{6} componentPointCounts[i], 			_fillIndex, 0, 0, ! frame_fill, fillcategory, distortion_flags,			_fillColorIndex, -1,! fill_pen, fill_background_pen,			0, 0, !fillOrigoX, fillOrigoY,			0, 0, 0, 0, ! mxx, mxy, myx, myy,			0, ! gradientInnerRadius,			GET(componentPointCounts[i] * 5) ! x1, y1, s1, ..., xn,				NEXT iENDIF