_nComponents = 0dim _componentTypes[]n = REQUEST ("Profile_components", profile, _nComponents, _componentTypes)DIM _prismPoints[]nRepeatCount = INT(ZZYZX / (elementThickness + verticalSpacing))IF _nComponents > 0 THEN	DIM componentPointCounts[ ]	DIM componentPoints[ ]	n = REQUEST ("Profile_default_geometry", profile, componentPointCounts)	_pointIndex = _nComponents	FOR i = 1 TO _nComponents		FOR j = 1 TO componentPointCounts[i]			X = 				componentPointCounts[_pointIndex + 1]			Y = 				componentPointCounts[_pointIndex + 2]			edgeVisible = 		componentPointCounts[_pointIndex + 3]			vertEdgeVisible = 	componentPointCounts[_pointIndex + 4]			additionalStatus = 	componentPointCounts[_pointIndex + 5]			_pointIndex = _pointIndex + 5			prismStatus = additionalStatus			if additionalStatus >= 0 then ! not contour end				if edgeVisible then					prismStatus = prismStatus + 15 ! j1, j2, j3, j4				endif				if vertEdgeVisible = 0 then					prismStatus = prismStatus + 64 ! j7					! in tube, lateral edges starting from the node are used for showing the contour					tubeStatus = tubeStatus + 1				endif			endif			PUT X, Y, prismStatus 		NEXT j		_componentMaterial = 0		n = REQUEST{4} ("Profile_component_info", profile, i, "gs_profile_bmat", _componentMaterial)			SET BUILDING_MATERIAL _componentMaterial		FOR cnt = 1 TO nRepeatCount			IF cnt = nRepeatCount THEN				PRISM_ componentPointCounts[i], elementThickness, GET (componentPointCounts[i] * 3)			ELSE				PRISM_ componentPointCounts[i], elementThickness, USE (componentPointCounts[i] * 3)			ENDIF			ADDZ verticalSpacing + elementThickness		NEXT cnt		DEL nRepeatCount	NEXT iENDIF