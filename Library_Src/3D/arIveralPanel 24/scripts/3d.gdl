! modified 2017-06-27! for front and back borders to be ok when rotatedROTY -angleunLId = 1unId = 1HOTSPOT 0,0,0, unId: unId = unId + 1HOTSPOT A,0,0, unId: unId = unId + 1HOTSPOT A,B,0, unId: unId = unId + 1HOTSPOT 0,B,0, unId: unId = unId + 1HOTSPOT 0,0,ZZYZX , unId: unId = unId + 1HOTSPOT A,0,ZZYZX , unId: unId = unId + 1HOTSPOT A,B,ZZYZX , unId: unId = unId + 1HOTSPOT 0,B,ZZYZX , unId: unId = unId + 1HOTSPOT A/2, B, 0, unId: unId = unId + 1!HOTSPOT A/2, 0, ZZYZXHOTLINE 0,0,0, A,0,0, unLId: unLId = unLId + 1HOTLINE 0,B,0, A,B,0, unLId: unLId = unLId + 1HOTLINE 0,0,0, 0,B,0, unLId: unLId = unLId + 1HOTLINE A,0,0, A,B,0, unLId: unLId = unLId + 1HOTLINE 0,0,ZZYZX, A,0,ZZYZX, unLId: unLId = unLId + 1HOTLINE 0,B,ZZYZX, A,B,ZZYZX, unLId: unLId = unLId + 1HOTLINE 0,0,ZZYZX, 0,B,ZZYZX, unLId: unLId = unLId + 1HOTLINE A,0,ZZYZX, A,B,ZZYZX, unLId: unLId = unLId + 1realLength = A - borderTypeWidths[borderLeft]  - borderTypeWidths[borderRight]realDepth = B - borderTypeWidths[borderBack]  - borderTypeWidths[borderFront]PUT 0,0, 15PUT realLength, 0, 15PUT realLength, realDepth, 15PUT 0, realDepth, 15PUT 0, 0, -1FOR i = 1 TO noHoles  PUT holes[i][1], holes[i][2], 15  PUT holes[i][1] + holes[i][3], holes[i][2], 15  PUT holes[i][1] + holes[i][3], holes[i][2] + holes[i][4], 15  PUT holes[i][1], holes[i][2] + holes[i][4], 15  PUT holes[i][1], holes[i][2], -1  HOTLINE holes[i][1], holes[i][2], 0, holes[i][1] + holes[i][3], holes[i][2], 0, unLId: unLId = unLId + 1  HOTLINE holes[i][1], holes[i][2] + holes[i][4], 0, holes[i][1] + holes[i][3], holes[i][2] + holes[i][4], 0, unLId: unLId = unLId + 1  HOTLINE holes[i][1], holes[i][2], 0, holes[i][1], holes[i][2] + holes[i][3], 0, unLId: unLId = unLId + 1  HOTLINE holes[i][1] + holes[i][3], holes[i][2], 0, holes[i][1] + holes[i][3], holes[i][2] + holes[i][4], 0, unLId: unLId = unLId + 1  HOTLINE holes[i][1], holes[i][2], ZZYZX, holes[i][1] + holes[i][3], holes[i][2], ZZYZX, unLId: unLId = unLId + 1  HOTLINE holes[i][1], holes[i][2] + holes[i][4], ZZYZX, holes[i][1] + holes[i][3], holes[i][2] + holes[i][4], ZZYZX, unLId: unLId = unLId + 1  HOTLINE holes[i][1], holes[i][2], ZZYZX, holes[i][1], holes[i][2] + holes[i][4], ZZYZX, unLId: unLId = unLId + 1  HOTLINE holes[i][1] + holes[i][3], holes[i][2], ZZYZX, holes[i][1] + holes[i][3], holes[i][2] + holes[i][4], ZZYZX, unLId: unLId = unLId + 1  HOTSPOT holes[i][1], holes[i][2], 0, unId: unId = unId + 1  HOTSPOT holes[i][1] + holes[i][3], holes[i][2], 0, unId: unId = unId + 1  HOTSPOT holes[i][1], holes[i][2] + holes[i][4], 0, unId: unId = unId + 1  HOTSPOT holes[i][1] + holes[i][3], holes[i][2] + holes[i][4], 0, unId: unId = unId + 1  HOTSPOT holes[i][1], holes[i][2], ZZYZX, unId: unId = unId + 1  HOTSPOT holes[i][1] + holes[i][3], holes[i][2], ZZYZX, unId: unId = unId + 1  HOTSPOT holes[i][1], holes[i][2] + holes[i][4], ZZYZX, unId: unId = unId + 1  HOTSPOT holes[i][1] + holes[i][3], holes[i][2] + holes[i][4], ZZYZX, unId: unId = unId + 1NEXT iADDX borderTypeWidths[borderLeft]ADDY borderTypeWidths[borderFront]laminateThickness = 0.0008SET MATERIAL matMain!BLOCK realLength, realDepth, 0.0008!PRISM 4, laminateThickness,!	0,0,!	realLength, 0,!	realLength, realDepth,!	0, realDepthPRISM_ NSP/3, laminateThickness, USE(NSP)ADDZ 0.0008SET MATERIAL matPanel!BLOCK realLength, realDepth, ZZYZX - 0.0008*2!PRISM 4, ZZYZX  - laminateThickness * 2,!	0,0,!	realLength, 0,!	realLength, realDepth,!	0, realDepthPRISM_ NSP/3, ZZYZX  - laminateThickness * 2, USE(NSP)ADDZ ZZYZX - laminateThickness * 2SET MATERIAL matMain!BLOCK realLength, realDepth, 0.0008!PRISM 4, laminateThickness,!	0,0,!	realLength, 0,!	realLength, realDepth,!	0, realDepthPRISM_ NSP/3, laminateThickness, USE(NSP)DEL 4IF borderFront > 1 THEN  SET MATERIAL matMain  BLOCK A, borderTypeWidths[borderFront], ZZYZXENDIFIF borderBack > 1 THEN  ADDY B-borderTypeWidths[borderBack]  BLOCK A, borderTypeWidths[borderBack], ZZYZX  DEL 1ENDIFIF borderRight > 1 THEN  ADDX A-borderTypeWidths[borderLeft]  ADDY borderTypeWidths[borderFront]  BLOCK borderTypeWidths[borderRight], B-borderTypeWidths[borderFront]-borderTypeWidths[borderBack], ZZYZX  DEL 2ENDIFIF borderLeft > 1 THEN  ADDY borderTypeWidths[borderFront]  BLOCK borderTypeWidths[borderLeft], B-borderTypeWidths[borderFront]-borderTypeWidths[borderBack], ZZYZX  DEL 1ENDIF